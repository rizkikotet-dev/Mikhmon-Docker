name: Docker Build and Publish

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      docker_tag:
        description: 'Custom Docker tag (leave empty for default)'
        required: false
        default: ''

env:
  DOCKER_BUILDKIT: 1
  BUILDKIT_PROGRESS: plain
  DOCKERHUB_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/mikhmon
  GHCR_IMAGE: ghcr.io/${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: latest

      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Determine Docker tag
      - name: Set Docker tag
        id: set_tag
        run: |
          DEFAULT_TAG="latest"
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && -n "${{ github.event.inputs.docker_tag }}" ]]; then
            DOCKER_TAG="${{ github.event.inputs.docker_tag }}"
          elif [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            DOCKER_TAG="${GITHUB_REF#refs/tags/v}"
          elif [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            DOCKER_TAG="${GITHUB_REF#refs/tags/}"
          else
            DOCKER_TAG="$DEFAULT_TAG"
          fi
          echo "DOCKER_TAG=$DOCKER_TAG" >> $GITHUB_ENV
          echo "docker_tag=$DOCKER_TAG" >> $GITHUB_OUTPUT

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.DOCKERHUB_IMAGE }}
            ${{ env.GHCR_IMAGE }}
          tags: |
            type=raw,value=${{ env.DOCKER_TAG }}
          labels: |
            org.opencontainers.image.vendor=${{ github.repository_owner }}
            org.opencontainers.image.created={{date 'yyyy-MM-dd'}}
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=MIT

      - name: Show tag and metadata
        run: |
          echo "✅ Docker tag: ${{ env.DOCKER_TAG }}"
          echo "✅ Full tags:"
          echo '${{ steps.meta.outputs.tags }}'

      - name: Verify build context
        run: ls -la

      - name: Build and push image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: true
          sbom: true
          build-args: |
            BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VCS_REF=${{ github.sha }}
            VERSION=${{ env.DOCKER_TAG }}

      - name: Output image digest
        run: echo ${{ steps.build-and-push.outputs.digest }}

      - name: Check image digest
        if: github.event_name != 'pull_request'
        run: |
          if [ -z "${{ steps.build-and-push.outputs.digest }}" ]; then
            echo "::error::❌ No image digest found, build may have failed."
            exit 1
          else
            echo "✅ Image pushed successfully. Digest: ${{ steps.build-and-push.outputs.digest }}"
          fi

      - name: Build summary
        run: |
          {
            echo "## 🐳 Docker Build Summary"
            echo "### ✅ Image Tags"
            echo '```'
            echo "${{ steps.meta.outputs.tags }}"
            echo '```'
            echo "### ✅ Platforms"
            echo '```'
            echo "linux/amd64, linux/arm64"
            echo '```'
            echo "### ✅ Image Digest"
            echo '```'
            echo "${{ steps.build-and-push.outputs.digest }}"
            echo '```'
            echo "### 🧾 Metadata"
            echo '```json'
            echo '${{ steps.meta.outputs.json }}' | jq '.'
            echo '```'
          } >> $GITHUB_STEP_SUMMARY
